apiVersion: v1
kind: Service
metadata:
  name: dotnet-app
spec:
  selector:
    name: dotnet-app
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    name: dotnet-app
  name: dotnet-app-init
spec:
  initContainers:
  - image: appdynamics/dotnet-core-agent:20.7.0
    name: appd-agent
    command:
      - cp
      - -ra
      - /opt/appdynamics/.
      - /opt/appd
    imagePullPolicy: Always
    volumeMounts:
    - mountPath: /opt/appd
      name: appd-agent-volume
  containers:
  - image: microsoft/dotnet-samples:aspnetapp
    name: dotnet-app
    resources: 
      limits:
        cpu: 200m
        memory: 500M
      requests:
        cpu: 100m
        memory: 300M
    #command: ["/bin/sh"]
    #args: ["-c", "UNIQUE_HOST_ID=$(sed -rn '1s#.*/##; 1s/docker-(.{12}).*/\\1/p' /proc/self/cgroup)"]
    envFrom:
    - configMapRef:
        name: appd-dotnet-config
    env:
    - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: appd-secrets
          key: account-access-key
    - name: APPDYNAMICS_AGENT_APPLICATION_NAME
      value: OpenShift-DotNet-Application
    - name: APPDYNAMICS_AGENT_UNIQUE_HOST_ID
      value: $(UNIQUE_HOST_ID)
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /opt/appd/dotnet
      name: appd-agent-volume
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  volumes:
  - name: appd-agent-volume
    emptyDir: {}
status: {}
